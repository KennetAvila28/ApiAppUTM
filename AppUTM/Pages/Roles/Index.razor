@page "/Roles"
@using Microsoft.AspNetCore.Authorization
@using System.Linq
@attribute [Authorize]
@inject HttpClient _http
@inject NavigationManager navigation
@inject NotificationService NotificationService

@if (_roles != null)
{
    <div class="container mt-3">
        <div class="d-flex">
            <h1 class="mx-auto">Lista de roles</h1>
            <RadzenButton class="mx-auto" Text="Agregar" ButtonStyle="ButtonStyle.Success" Click=@(() => navigation.NavigateTo($"/Roles/Create")) />
        </div>
        <div class="table-responsive">
            <table class="table">
                <thead class="bg-light text-center">
                    <tr>
                        <th scope="col">Nombre</th>
                        @foreach (var module in _modules)
                        {
                            <th scope="col">@module.Name</th>
                        }
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody class="text-center">
                    @foreach (var role in _roles)
                    {
                        <tr>
                            <td>@role.Nombre</td>
                            @foreach (var module in _modules)
                            {
                                if (role.RoleModules.Any(r => r.ModuleId == module.Id))
                                {
                                    <td><RadzenCheckBox TValue="bool" Value="true" Disabled="true" /></td>

                                }
                                else
                                {
                                    <td><RadzenCheckBox TValue="bool" Value="false" Disabled="true" /></td>
                                }

                            }
                            <td> <RadzenButton class="mx-auto" Text="Editar" ButtonStyle="ButtonStyle.Success" Click=@(() => navigation.NavigateTo($"/Roles/Edit/{role.Id}")) /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}
else
{
    <Spinner />
}

@code
{
    private IEnumerable<ModuleReturn> _modules;
    private IList<RoleReturn> _roles;
    protected override async Task OnInitializedAsync()
    {
        _modules = await GetExtensions.GetAllModules(_http);
        _roles = await GetExtensions.GetAllRoles(_http);
    }
}