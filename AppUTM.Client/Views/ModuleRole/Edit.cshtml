@model AppUTM.Api.DTOS.ModulesRoles.ModuleRoleUpdate

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ModuleRoleUpdate</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.HiddenFor(model => model.ModuleId)
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.RoleId)
            </div>

            <b>Permisos:</b><br />
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Lectura" id="Lectura" /> @Html.DisplayNameFor(model => model.Lectura)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Escritura" id="Escritura" /> @Html.DisplayNameFor(model => model.Escritura)
                </label>
            </div><br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    $(document).ready(function () {
        $('#Escritura').click(function () {
            if ($('#Escritura').is(':checked')) {
                $('#Lectura').prop("checked", true);
            }
            //} else {
            //    $('#Lectura').prop("checked", false);

            //}

        })

    });
</script>
}
